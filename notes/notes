Serial comm:
read: stty -F /dev/ttyACM0 9600 raw -echo; cat /dev/ttyACM0
write:
    printf "DAVSSET_KEY\x00\x03\x01\x01\x62\x00\n" > /dev/ttyACM0
    printf "DAVSGET_KEY\x00\x01\x00\n" > /dev/ttyACM0

pro_micro Serial1
    pin0 - RX
    pin1 - TX
    -- connect TR-RX and RX-TX

pro_micro i2c
    pin2 - SDA
    pin3 - SCL

QMK architecture
    - everything is INPUT_PULLUP
    - then it sets a row to OUTPUT_LOW and checks columns

Animus architecture
    - VPins are INPUT_PULLUP
    - HPins are INPUT FLOATING
    - then it sets HPin to OUTPUT_LOW and check VPin value

32u4 port definitions
/opt/avr/packages/arduino/tools/avr-gcc/4.9.2-atmel3.5.4-arduino2/avr/include/avr/iom32u4.h


DDRx - Data Direction register (RW)
    0 - input
    1 - output

PORTx - Pin Output RegisTer (RW)
    - input:
        0 - floating
        1 - pullup
    - output:
        0 - low
        1 - high

PINx - Pin INput register (RO)
    0 - low In
    1 - high In

// To use PORTF disable JTAG with writing JTD bit twice within four cycles.
#if  (defined(__AVR_ATmega32U4__))
    MCUCR |= _BV(JTD);
    MCUCR |= _BV(JTD);
#endif

bit number
76543210
DEADBEEF

bit 0: left control
bit 1: left shift
bit 2: left alt
bit 3: left GUI (Win/Apple/Meta key)
bit 4: right control
bit 5: right shift
bit 6: right alt
bit 7: right GUI

E0 Left control
E1 Left shift
E2 Left alt
E3 Left GUI
E4 Right control
E5 Right shift
E6 Right alt
E7 Right GUI

dissassemble with source:
avr-objdump -h -C -l -d dalsik.ino.elf > dalsik.S


// Check if USB is connected
// UDADDR & _BV(ADDEN)
