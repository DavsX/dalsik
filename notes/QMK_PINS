#define MATRIX_ROW_PINS { B5, B4, E6, D7 }
#define MATRIX_COL_PINS { F4, F5, F6, F7, B1, B3 }
static const uint8_t row_pins[MATRIX_ROWS] = MATRIX_ROW_PINS;
static const uint8_t col_pins[MATRIX_COLS] = MATRIX_COL_PINS;

select_row(1)

uint8_t pin = col_pins[col_index];
uint8_t pin_state = (_SFR_IO8(pin >> 4) & _BV(pin & 0xF));

0xF4
_SFR_IO8(0x0F) & _BV(0x04)

====

static void select_row(uint8_t row)
{
    uint8_t pin = row_pins[row];
    _SFR_IO8((pin >> 4) + 1) |=  _BV(pin & 0xF); // OUT
    _SFR_IO8((pin >> 4) + 2) &= ~_BV(pin & 0xF); // LOW
}

PINB = 0x03(0x23)
DDRB = 0x04(0x24)
PORTB = 0x05(0x25)

PINB = 0x03
PINC = 0x06
PIND = 0x09
PINE = 0x0C
PINF = 0x0F

====

DDRx - Data Direction register (RW)
    0 - input
    1 - output

PORTx - Pin Output RegisTer (RW)
    - input:
        0 - floating
        1 - pullup
    - output:
        0 - low
        1 - high

PINx - Pin INput register (RO)
    0 - low In
    1 - high In
